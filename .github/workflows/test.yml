name: CI

on:
  pull_request:
    paths-ignore:
    - '**.rst'
    - '**.txt'
    - '**.texi'
  push:
    paths-ignore:
    - '**.txt'
    - '**.rst'
    - '**.texi'
    branches-ignore:
    - 'master'
    - 'main'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        emacs_version: [27.2, 28.1]
        include:
          - os: macos-latest
            emacs_version: 28.1
    steps:
    - uses: actions/checkout@v2

    - uses: purcell/setup-emacs@master
      with:
        version: ${{ matrix.emacs_version }}

    - uses: actions/cache@v2
      id: cache-cask-packages
      with:
        path: .cask
        key: cache-cask-packages-000

    - uses: actions/cache@v2
      id: cache-cask-executable
      with:
        path: ~/.cask
        key: cache-cask-executable-000

    - uses: cask/setup-cask@master
      if: steps.cache-cask-executable.outputs.cache-hit != 'true'
      with:
          version: snapshot

    - name: paths
      run: |
        echo "$HOME/bin" >> $GITHUB_PATH
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        echo "$HOME/.cask/bin" >> $GITHUB_PATH
        echo "LD_LIBRARY_PATH=$HOME/.local/lib" >> $GITHUB_ENV

    - name: apt-get
      if: startsWith(runner.os, 'Linux')
      run: |
        sudo apt-get -yq update
        DEBIAN_FRONTEND=noninteractive sudo apt-get -yq install gnutls-bin sharutils gnupg2 dirmngr libreadline-dev libcurl4-openssl-dev

    - name: gnupg
      if: startsWith(runner.os, 'macOS')
      run: |
        brew list gnupg &>/dev/null || HOMEBREW_NO_AUTO_UPDATE=1 brew install gnupg
        brew list gnu-tar &>/dev/null || HOMEBREW_NO_AUTO_UPDATE=1 brew install gnu-tar

    - name: test
      run: |
        make test

    - name: test-install-without-cask
      run: |
        trap 'trap "" EXIT ; echo got here ; mv ~/.cask/bin/hide.cask ~/.cask/bin/cask' EXIT
        mv ~/.cask/bin/cask ~/.cask/bin/hide.cask
        ! which cask
        ELPASO_DEBUG=1 make install
